from django.db import models# CONSTANTESMAX_L_AUTHEUR   = 150MAX_TAG_LENGTH  = 50MAX_L_TITRE     = 150MAX_L_CONTENU   = 1000# Create your models here.class Blog(models.Model):    auteur      = models.CharField(max_length=MAX_L_AUTHEUR)    def __unicode__(self):        return "%s" % self.auteurclass Tag(models.Model):    titre       = models.CharField(max_length=MAX_TAG_LENGTH)    blog        = models.CharField(max_length=MAX_TAG_LENGTH)    def __unicode__(self):        return "%s" % self.titreclass BlogPost(models.Model):    titre       = models.CharField(max_length=MAX_L_TITRE)    contenu     = models.TextField(max_length=MAX_L_CONTENU, default="(Empty.)")    date_post   = models.DateTimeField('Created On', auto_now_add=True)    blog        = models.ForeignKey(Blog)    class Meta:        ordering = ('-date_post',)    def __unicode__(self):        return "%s" % self.titreclass SectionAbstract(models.Model):    numero_dordre   = models.IntegerField(default=0) # chapitre #    titre           = models.CharField(max_length=MAX_L_TITRE)    illustration    = models.CharField(max_length=MAX_L_TITRE, blank=True)  # image    paragraphe      = models.TextField(blank=True)    class Meta:        ordering = ('numero_dordre',)    def __unicode__(self):        return "%s" % self.titreclass BlogSection(SectionAbstract):    blogpost        = models.ForeignKey(BlogPost)class SectionSection(SectionAbstract):    blogsection = models.ForeignKey(BlogSection)class CommentAbstrat(models.Model):    autheur     = models.CharField(max_length=MAX_L_AUTHEUR)    commentaire = models.TextField()    date_comm   = models.DateTimeField('Commented On', auto_now_add=True)    blogpost    = models.ForeignKey(BlogPost)class CommentBlogPost(CommentAbstrat):    passclass LikeAbstract(models.Model):    autheur     = models.CharField(max_length=MAX_L_AUTHEUR)    date_like   = models.DateTimeField('Liked On', auto_now_add=True)class LikeBlogPost(LikeAbstract):    passclass LikeCommentBlogPost(LikeAbstract):    passclass ShareAbstract(models.Model):    passclass ShareBlogPost(ShareAbstract):    pass
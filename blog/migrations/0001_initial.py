# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-21 00:02
from __future__ import unicode_literals

import blog.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.TextField(blank=True, max_length=100, null=True)),
                ('illustration', models.FileField(blank=True, null=True, upload_to=blog.models.get_upload_blog_file_name)),
                ('date_blog', models.DateTimeField(auto_now_add=True, verbose_name=b'Created On')),
                ('slug', models.SlugField(blank=True, max_length=128)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.UserProfileModel')),
            ],
            options={
                'ordering': ('-date_blog',),
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=150)),
                ('illustration', models.FileField(blank=True, null=True, upload_to=blog.models.get_upload_post_file_name)),
                ('text', models.TextField(default=b'(Empty.)', max_length=1000)),
                ('date_post', models.DateTimeField(auto_now_add=True, verbose_name=b'Created On')),
                ('slug', models.SlugField(blank=True, max_length=128)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='blog.Blog')),
            ],
            options={
                'ordering': ('-date_post',),
            },
        ),
        migrations.CreateModel(
            name='BlogSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rang', models.IntegerField(default=0)),
                ('titre', models.CharField(max_length=150)),
                ('illustration', models.FileField(blank=True, upload_to=blog.models.get_upload_post_file_name)),
                ('text', models.TextField(blank=True)),
                ('blogpost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogsections', to='blog.BlogPost')),
            ],
            options={
                'ordering': ('rang',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategorieTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommentAbstrat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentaire', models.TextField()),
                ('date_comm', models.DateTimeField(auto_now_add=True, verbose_name=b'Commented On')),
            ],
        ),
        migrations.CreateModel(
            name='InteractionAbstract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SectionSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rang', models.IntegerField(default=0)),
                ('titre', models.CharField(max_length=150)),
                ('illustration', models.FileField(blank=True, upload_to=blog.models.get_upload_post_file_name)),
                ('text', models.TextField(blank=True)),
                ('blogsection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secsections', to='blog.BlogSection')),
            ],
            options={
                'ordering': ('rang',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blogpost', models.CharField(max_length=50)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.CategorieTag')),
            ],
        ),
        migrations.CreateModel(
            name='CommentBlogPost',
            fields=[
                ('commentabstrat_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.CommentAbstrat')),
                ('blogpost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postcomments', to='blog.BlogPost')),
            ],
            bases=('blog.commentabstrat',),
        ),
        migrations.CreateModel(
            name='LikeBlogPost',
            fields=[
                ('interactionabstract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.InteractionAbstract')),
                ('date_like', models.DateTimeField(auto_now_add=True, verbose_name=b'Liked On')),
                ('blogpost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.BlogPost')),
            ],
            options={
                'abstract': False,
            },
            bases=('blog.interactionabstract',),
        ),
        migrations.CreateModel(
            name='LikeCommentBlogPost',
            fields=[
                ('interactionabstract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.InteractionAbstract')),
                ('date_like', models.DateTimeField(auto_now_add=True, verbose_name=b'Liked On')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.CommentBlogPost')),
            ],
            options={
                'abstract': False,
            },
            bases=('blog.interactionabstract',),
        ),
        migrations.CreateModel(
            name='LikeReplyComment',
            fields=[
                ('interactionabstract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.InteractionAbstract')),
                ('date_like', models.DateTimeField(auto_now_add=True, verbose_name=b'Liked On')),
            ],
            options={
                'abstract': False,
            },
            bases=('blog.interactionabstract',),
        ),
        migrations.CreateModel(
            name='ReplyComment',
            fields=[
                ('commentabstrat_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.CommentAbstrat')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replycomments', to='blog.CommentBlogPost')),
            ],
            bases=('blog.commentabstrat',),
        ),
        migrations.CreateModel(
            name='ShareBlogPost',
            fields=[
                ('interactionabstract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.InteractionAbstract')),
                ('date_share', models.DateTimeField(auto_now_add=True, verbose_name=b'Shared On')),
                ('blogpost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.BlogPost')),
            ],
            options={
                'abstract': False,
            },
            bases=('blog.interactionabstract',),
        ),
        migrations.AddField(
            model_name='interactionabstract',
            name='auteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.UserProfileModel'),
        ),
        migrations.AddField(
            model_name='commentabstrat',
            name='auteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.UserProfileModel'),
        ),
        migrations.AddField(
            model_name='likereplycomment',
            name='comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.ReplyComment'),
        ),
        migrations.AlterUniqueTogether(
            name='blog',
            unique_together=set([('auteur', 'theme', 'date_blog')]),
        ),
    ]
